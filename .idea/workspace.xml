<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="SELECTIVE" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="1de4406e-2fa5-4f6b-b82d-cfe32e97160e" name="Changes" comment="chore: Implement bcrypt hashing for passwords and update authentication logic">
      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/main/java/com/luv2code/springboot/cruddemo/dao/EmployeeRepository.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/com/luv2code/springboot/cruddemo/dao/EmployeeRepository.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/main/java/com/luv2code/springboot/cruddemo/entity/Employee.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/com/luv2code/springboot/cruddemo/rest/entity/Employee.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/main/java/com/luv2code/springboot/cruddemo/rest/EmployeeRestController.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/com/luv2code/springboot/cruddemo/rest/EmployeeRestController.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/main/java/com/luv2code/springboot/cruddemo/security/DemoSecurityConfig.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/com/luv2code/springboot/cruddemo/security/DemoSecurityConfig.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/main/java/com/luv2code/springboot/cruddemo/service/EmployeeService.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/com/luv2code/springboot/cruddemo/service/EmployeeService.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/main/java/com/luv2code/springboot/cruddemo/service/EmployeeServiceImpl.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/com/luv2code/springboot/cruddemo/service/EmployeeServiceImpl.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/main/resources/application.properties" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/resources/application.properties" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="CompilerWorkspaceConfiguration">
    <option name="MAKE_PROJECT_ON_SAVE" value="true" />
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="Interface" />
        <option value="Class" />
      </list>
    </option>
  </component>
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="MarkdownSettingsMigration">
    <option name="stateVersion" value="1" />
  </component>
  <component name="MavenImportPreferences">
    <option name="generalSettings">
      <MavenGeneralSettings>
        <option name="useMavenConfig" value="true" />
      </MavenGeneralSettings>
    </option>
  </component>
  <component name="ProblemsViewState">
    <option name="selectedTabId" value="CurrentFile" />
  </component>
  <component name="ProjectId" id="2iFMxGHaOWsE6h3mF5qsmcpKc8g" />
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent">
    <property name="RunOnceActivity.OpenProjectViewOnStart" value="true" />
    <property name="RunOnceActivity.ShowReadmeOnStart" value="true" />
    <property name="last_opened_file_path" value="$PROJECT_DIR$" />
    <property name="project.structure.last.edited" value="Project" />
    <property name="project.structure.proportion" value="0.0" />
    <property name="project.structure.side.proportion" value="0.2" />
    <property name="run.code.analysis.last.selected.profile" value="pProject Default" />
    <property name="settings.editor.selected.configurable" value="advanced.settings" />
  </component>
  <component name="RunManager">
    <configuration name="MycoolappApplication" type="Application" factoryName="Application" temporary="true" nameIsGenerated="true">
      <option name="MAIN_CLASS_NAME" value="com.luv2code.springboot.cruddemo.CruddemoApplication" />
      <module name="00-spring-boot-rest-security-employee-starter-code" />
      <extension name="coverage">
        <pattern>
          <option name="PATTERN" value="com.luv2code.springboot.demo.mycoolapp.common.*" />
          <option name="ENABLED" value="true" />
        </pattern>
      </extension>
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <recent_temporary>
      <list>
        <item itemvalue="Application.MycoolappApplication" />
      </list>
    </recent_temporary>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="1de4406e-2fa5-4f6b-b82d-cfe32e97160e" name="Changes" comment="" />
      <created>1719082119503</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1719082119503</updated>
    </task>
    <task id="LOCAL-00001" summary="dependency injection implemented">
      <created>1719617222676</created>
      <option name="number" value="00001" />
      <option name="presentableId" value="LOCAL-00001" />
      <option name="project" value="LOCAL" />
      <updated>1719617222676</updated>
    </task>
    <task id="LOCAL-00002" summary="component scanning implemented">
      <created>1719619161778</created>
      <option name="number" value="00002" />
      <option name="presentableId" value="LOCAL-00002" />
      <option name="project" value="LOCAL" />
      <updated>1719619161778</updated>
    </task>
    <task id="LOCAL-00003" summary="setter injection tested">
      <created>1719620313317</created>
      <option name="number" value="00003" />
      <option name="presentableId" value="LOCAL-00003" />
      <option name="project" value="LOCAL" />
      <updated>1719620313317</updated>
    </task>
    <task id="LOCAL-00004" summary="Author: Hari Lal&#10;Purpose: Tested and implemented injection using Spring Qualifier">
      <created>1719621655111</created>
      <option name="number" value="00004" />
      <option name="presentableId" value="LOCAL-00004" />
      <option name="project" value="LOCAL" />
      <updated>1719621655111</updated>
    </task>
    <task id="LOCAL-00005" summary="Purpose: Tested and implemented spring lazy initialization at class level and at global level">
      <created>1719623909945</created>
      <option name="number" value="00005" />
      <option name="presentableId" value="LOCAL-00005" />
      <option name="project" value="LOCAL" />
      <updated>1719623909945</updated>
    </task>
    <task id="LOCAL-00006" summary="Purpose: Tested and implemented Custom Bean for third party class like Amazon S3">
      <created>1719627964614</created>
      <option name="number" value="00006" />
      <option name="presentableId" value="LOCAL-00006" />
      <option name="project" value="LOCAL" />
      <updated>1719627964614</updated>
    </task>
    <task id="LOCAL-00007" summary="feat: Implement basic authentication with Spring Security&#10;&#10;- Integrated Spring Security with basic authentication to secure API endpoints.&#10;- Configured default username and password in application.properties.&#10;- Added proper authorization checks for all endpoints.&#10;- Updated project dependencies and security configurations for production readiness.">
      <created>1735048674644</created>
      <option name="number" value="00007" />
      <option name="presentableId" value="LOCAL-00007" />
      <option name="project" value="LOCAL" />
      <updated>1735048674644</updated>
    </task>
    <task id="LOCAL-00008" summary="feat: Add in-memory user details with role-based access control&#10;&#10;- Configured Spring Security to use in-memory user details.&#10;- Added three users with different roles: ADMIN, MANAGER, and EMPLOYEE.&#10;- Implemented role-based access control for API endpoints.&#10;- Tested endpoint accessibility based on user roles to ensure proper security.">
      <created>1735050560598</created>
      <option name="number" value="00008" />
      <option name="presentableId" value="LOCAL-00008" />
      <option name="project" value="LOCAL" />
      <updated>1735050560598</updated>
    </task>
    <task id="LOCAL-00009" summary="feat: Add security filter chain with role-based access control&#10;&#10;- Implemented filterChain method to configure HTTP security with role-based access control.&#10;- Restricted access to API endpoints based on roles: &quot;EMPLOYEE&quot;, &quot;MANAGER&quot;, and &quot;ADMIN&quot;.&#10;- Disabled CSRF protection and enabled HTTP Basic authentication.">
      <created>1735055841134</created>
      <option name="number" value="00009" />
      <option name="presentableId" value="LOCAL-00009" />
      <option name="project" value="LOCAL" />
      <updated>1735055841134</updated>
    </task>
    <task id="LOCAL-00010" summary="feat: Add JDBC-based authorization using users and authorities tables&#10;&#10;- Set up 'users' table to store user credentials (username, password, enabled).&#10;- Set up 'authorities' table to store user roles/permissions with foreign key referencing 'users' table.&#10;- Integrated JDBC connector to handle database-based authorization.&#10;- Configured database schema for referential integrity between 'users' and 'authorities'.&#10;- Ensured roles and credentials are loaded dynamically from the database for authorization.&#10;- Added functionality to enforce role-based access control (RBAC) via JDBC authentication.">
      <created>1735070267234</created>
      <option name="number" value="00010" />
      <option name="presentableId" value="LOCAL-00010" />
      <option name="project" value="LOCAL" />
      <updated>1735070267234</updated>
    </task>
    <task id="LOCAL-00011" summary="chore: Implement bcrypt hashing for passwords and update authentication logic">
      <created>1735073209833</created>
      <option name="number" value="00011" />
      <option name="presentableId" value="LOCAL-00011" />
      <option name="project" value="LOCAL" />
      <updated>1735073209833</updated>
    </task>
    <option name="localTasksCounter" value="12" />
    <servers />
  </component>
  <component name="Vcs.Log.Tabs.Properties">
    <option name="TAB_STATES">
      <map>
        <entry key="MAIN">
          <value>
            <State />
          </value>
        </entry>
      </map>
    </option>
  </component>
  <component name="VcsManagerConfiguration">
    <MESSAGE value="dependency injection implemented" />
    <MESSAGE value="component scanning implemented" />
    <MESSAGE value="setter injection tested" />
    <MESSAGE value="Author: Hari Lal&#10;Purpose: Tested and implemented injection using Spring Qualifier" />
    <MESSAGE value="Purpose: Tested and implemented spring lazy initialization at class level and at global level" />
    <MESSAGE value="Purpose: Tested and implemented Custom Bean for third party class like Amazon S3" />
    <MESSAGE value="feat: Implement basic authentication with Spring Security&#10;&#10;- Integrated Spring Security with basic authentication to secure API endpoints.&#10;- Configured default username and password in application.properties.&#10;- Added proper authorization checks for all endpoints.&#10;- Updated project dependencies and security configurations for production readiness." />
    <MESSAGE value="feat: Add in-memory user details with role-based access control&#10;&#10;- Configured Spring Security to use in-memory user details.&#10;- Added three users with different roles: ADMIN, MANAGER, and EMPLOYEE.&#10;- Implemented role-based access control for API endpoints.&#10;- Tested endpoint accessibility based on user roles to ensure proper security." />
    <MESSAGE value="feat: Add security filter chain with role-based access control&#10;&#10;- Implemented filterChain method to configure HTTP security with role-based access control.&#10;- Restricted access to API endpoints based on roles: &quot;EMPLOYEE&quot;, &quot;MANAGER&quot;, and &quot;ADMIN&quot;.&#10;- Disabled CSRF protection and enabled HTTP Basic authentication." />
    <MESSAGE value="feat: Add JDBC-based authorization using users and authorities tables&#10;&#10;- Set up 'users' table to store user credentials (username, password, enabled).&#10;- Set up 'authorities' table to store user roles/permissions with foreign key referencing 'users' table.&#10;- Integrated JDBC connector to handle database-based authorization.&#10;- Configured database schema for referential integrity between 'users' and 'authorities'.&#10;- Ensured roles and credentials are loaded dynamically from the database for authorization.&#10;- Added functionality to enforce role-based access control (RBAC) via JDBC authentication." />
    <MESSAGE value="chore: Implement bcrypt hashing for passwords and update authentication logic" />
    <option name="LAST_COMMIT_MESSAGE" value="chore: Implement bcrypt hashing for passwords and update authentication logic" />
  </component>
</project>